double deg2rad(double);
double rad2deg(double);

double distance(double lat1, double lon1, double lat2, double lon2) {
 double theta, dist;
	static double accdist=0.0;
	
  if ((lat1 == lat2) && (lon1 == lon2)) {
    return 0;
  }
  else {
		
		
    theta = lon1 - lon2;
    dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1)) * cos(deg2rad(lat2)) * cos(deg2rad(theta));
    dist = acos(dist);
    dist = rad2deg(dist);
    dist = dist * 60 * 1.1515;
    
    dist = dist * 1609.344;
    
    
    accdist= accdist + dist;
    
    return (accdist);
  }
}



/*::  This function converts decimal degrees to radians            

double deg2rad(double deg) {
  return (deg * pi / 180);
}


/*::  This function converts radians to decimal degrees           

double rad2deg(double rad) {
  return (rad * 180 / pi);
	
}
